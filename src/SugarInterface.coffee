define 'SugarInterface', ['ArgumentsWrapper', 'Jasmine', 'PrivateStore', 'Utils'], (_Wrapper_, _JasmineStore_, _Context_, u)->
  (Jasmine, Wrapper = _Wrapper_, JasmineStore = _JasmineStore_, Context = _Context_)->
    return {} unless Jasmine
    JasmineStore.set Jasmine

    if u(Jasmine.describe).isAFunction()
      @describe = ->
        Jasmine.describe.apply Context.set(this), Wrapper(arguments...).describe()

    autoGeneratedMethods = ['it', 'iit', 'fit', 'xit']

    # genarating the following functions:
    # @it = ()->
    #   Jasmine.it.apply(
    #     this,
    #     Wrapper(arguments...).it()
    #   )

    # @iit = ()->
    #   Jasmine.iit.apply(
    #     this,
    #     Wrapper(arguments...).it()
    #   )

    # @fit = ()->
    #   Jasmine.fit.apply(
    #     this,
    #     Wrapper(arguments...).it()
    #   )

    # @xit = ()->
    #   Jasmine.xit.apply(
    #     this,
    #     Wrapper(arguments...).it()
    #   )

    for method in autoGeneratedMethods
      if u(Jasmine[method]).isAFunction()
        this[method] = do (method = method)->
          ->
            Jasmine[method].apply(this,
              Wrapper(arguments...).it())

    this