define 'interface', ['arguments', 'jasmine', 'utils'], (_Wrapper_, _JasmineStore_, u)->
  (Jasmine, Wrapper = _Wrapper_, JasmineStore = _JasmineStore_)->
    return {} unless Jasmine
    JasmineStore.set Jasmine

    if u(Jasmine.describe).isAFunction()
      @describe = ->
        console.log 'in describe'
        # callback = new Callback(fn)

        # Jasmine.describe.call this, name, ->
        #   callback.run.call this
        args = Wrapper(arguments...).describe(this)
        console.log args
        Jasmine.describe.apply this, args

    autoGeneratedMethods = ['it', 'iit', 'fit', 'xit']

    # genarating the following functions:
    # @it = ()->
    #   Jasmine.it.apply(
    #     this,
    #     Wrapper(arguments...).it()
    #   )

    # @iit = ()->
    #   Jasmine.iit.apply(
    #     this,
    #     Wrapper(arguments...).it()
    #   )

    # @fit = ()->
    #   Jasmine.fit.apply(
    #     this,
    #     Wrapper(arguments...).it()
    #   )

    # @xit = ()->
    #   Jasmine.xit.apply(
    #     this,
    #     Wrapper(arguments...).it()
    #   )

    for method in autoGeneratedMethods
      if u(Jasmine[method]).isAFunction()
        this[method] = do (method = method)->
          ->
            Jasmine[method].apply(this,
              Wrapper(arguments...).it())

    this